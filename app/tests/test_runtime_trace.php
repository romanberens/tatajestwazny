<?php
/**
 * üß™ test_runtime_trace.php (v3)
 * Dynamiczny tracer logiki CMS ‚Äî poprawiona ≈õcie≈ºka do helpers.php
 */

declare(strict_types=1);
date_default_timezone_set('Europe/Warsaw');

$baseDir = '/var/www/html/app';
$logDir  = "$baseDir/logs/diagnostics";
@mkdir($logDir, 0775, true);
$logFile = $logDir . '/cms_runtime_trace_' . date('Ymd_His') . '.log';

function logLine(string $msg): void {
    global $logFile;
    file_put_contents($logFile, '['.date('H:i:s')."] $msg\n", FILE_APPEND);
}

logLine("=== üö¶ CMS RUNTIME TRACE START ===");

// 1Ô∏è‚É£ Za≈Çaduj ≈õrodowisko CMS
require_once "$baseDir/src/Db.php";
require_once "$baseDir/src/Repositories/PagesRepository.php";
require_once "$baseDir/src/Repositories/PostsRepository.php";
require_once "$baseDir/src/Repositories/MenuRepository.php";
require_once "$baseDir/src/AdminHandlers.php";
require_once "$baseDir/src/helpers.php"; // ‚úÖ poprawiona ≈õcie≈ºka

$db = new Db();
$pdo = $db->pdo;

// 2Ô∏è‚É£ Przygotuj dane testowe symulujƒÖce formularz POST
$_SERVER['REQUEST_METHOD'] = 'POST';
$_SESSION = ['csrf' => '12345'];
$_POST = [
    'csrf' => '12345',
    'action' => 'save_page',
    'slug' => 'strona-testowa',
    'title' => 'Strona testowa z trace',
    'body_html' => '<p>Testowa tre≈õƒá</p>',
];

// 3Ô∏è‚É£ Hook: przechwyƒá i zmierz dane wej≈õciowe i wyj≈õciowe
function trace_call(string $name, callable $fn) {
    logLine("‚Üí CALL: $name()");
    $start = microtime(true);
    try {
        $result = $fn();
        $time = round((microtime(true) - $start) * 1000, 2);
        logLine("‚Üê RETURN: $name() OK ({$time} ms)");
        return $result;
    } catch (Throwable $e) {
        $time = round((microtime(true) - $start) * 1000, 2);
        logLine("üí• ERROR in $name(): ".$e->getMessage()." @".$e->getFile().":".$e->getLine()." ({$time} ms)");
        return null;
    }
}

// 4Ô∏è‚É£ Uruchom symulowany przep≈Çyw: handlePagesPost ‚Üí save()
logLine("üß© INIT PagesRepository + test handlePagesPost()");
$pagesRepo = new PagesRepository($pdo);

trace_call('handlePagesPost', function() use ($pagesRepo) {
    if (function_exists('handlePagesPost')) {
        handlePagesPost('save_page', $pagesRepo);
    } else {
        throw new Exception('Brak funkcji handlePagesPost()');
    }
});

// 5Ô∏è‚É£ Zweryfikuj, czy dane faktycznie trafi≈Çy do bazy
logLine("üß© Weryfikacja wpisu w bazie");
$stmt = $pdo->query("SELECT id, slug, title, length(body_html) AS len FROM pages ORDER BY id DESC LIMIT 1");
$row = $stmt->fetch();
if ($row) {
    logLine("‚úÖ Last inserted: ID={$row['id']}, slug={$row['slug']}, title={$row['title']}, body_len={$row['len']}");
} else {
    logLine("‚ö†Ô∏è Brak wpis√≥w w tabeli pages (nie zapisano nic).");
}

logLine("=== ‚úÖ CMS RUNTIME TRACE END ===");
echo "‚úÖ Raport zapisano do: $logFile\n";
