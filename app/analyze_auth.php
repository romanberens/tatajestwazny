<?php
/**
 * üîç TataJestWazny - analiza mechanizmu logowania
 * Autor: Roman Berens - OneNetworks
 */

$root = __DIR__;
$patterns = [
    'password_verify',
    'password_hash',
    '$_POST',
    'admin_password',
    'password',
    'auth',
    'verify'
];

echo "üîé Analiza mechanizmu autoryzacji w $root\n\n";

// 1Ô∏è‚É£ Przeszukanie plik√≥w PHP
$files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($root));
$found = [];

foreach ($files as $file) {
    if (pathinfo($file, PATHINFO_EXTENSION) !== 'php') continue;
    $content = file_get_contents($file);
    foreach ($patterns as $p) {
        if (stripos($content, $p) !== false) {
            $found[$file][] = $p;
        }
    }
}

if (empty($found)) {
    echo "‚ùå Nie znaleziono odniesie≈Ñ do hase≈Ç.\n";
    exit;
}

echo "üìÇ Znaleziono potencjalne pliki powiƒÖzane z logowaniem:\n";
foreach ($found as $file => $matches) {
    echo " - $file (" . implode(", ", array_unique($matches)) . ")\n";
}

// 2Ô∏è‚É£ Weryfikacja, czy istnieje plik konfiguracyjny z has≈Çem
$configFile = "$root/config/config.php";
if (file_exists($configFile)) {
    echo "\n‚öôÔ∏è  Wykryto plik konfiguracyjny: $configFile\n";
    $configContent = file_get_contents($configFile);
    if (preg_match('/admin_password[\'"]?\s*=>\s*[\'"](.+?)[\'"]/', $configContent, $m)) {
        echo "‚úÖ Has≈Ço zapisane w konfiguracji jako hash bcrypt:\n";
        echo "   {$m[1]}\n";
        echo "\n‚ÑπÔ∏è  Mo≈ºesz wygenerowaƒá nowe has≈Ço poleceniem:\n";
        echo "   docker exec -it tjw_php php -r 'echo password_hash(\"NOWE_HASLO\", PASSWORD_BCRYPT).\"\\n\";'\n";
        echo "\n   Nastƒôpnie wklej wynik do $configFile w miejsce dotychczasowego hasha.\n";
    } else {
        echo "‚ö†Ô∏è  Plik config.php istnieje, ale nie znaleziono klucza 'admin_password'.\n";
        echo "   Mo≈ºesz dodaƒá go rƒôcznie np.:\n";
        echo "   return ['admin_password' => 'HASH_TUTAJ'];\n";
    }
} else {
    echo "\n‚ö†Ô∏è  Nie znaleziono pliku config.php.\n";
    echo "   Mo≈ºliwe, ≈ºe has≈Ço jest w bazie danych SQLite lub w include auth.php.\n";
}

// 3Ô∏è‚É£ Sprawdzenie bazy danych
$dbFile = "$root/db/tjw.sqlite";
if (file_exists($dbFile)) {
    echo "\nüóÑÔ∏è  Sprawdzam bazƒô danych SQLite...\n";
    try {
        $pdo = new PDO("sqlite:$dbFile");
        $tables = $pdo->query("SELECT name FROM sqlite_master WHERE type='table'")->fetchAll(PDO::FETCH_COLUMN);
        if ($tables) {
            echo "   Tabele: " . implode(", ", $tables) . "\n";
            if (in_array('admins', $tables)) {
                $cols = $pdo->query("PRAGMA table_info(admins)")->fetchAll(PDO::FETCH_ASSOC);
                echo "   Struktura tabeli 'admins':\n";
                foreach ($cols as $c) {
                    echo "     - {$c['name']} ({$c['type']})\n";
                }
            }
        } else {
            echo "‚ùå Baza istnieje, ale jest pusta.\n";
        }
    } catch (Exception $e) {
        echo "‚ùå B≈ÇƒÖd po≈ÇƒÖczenia z SQLite: " . $e->getMessage() . "\n";
    }
} else {
    echo "\n‚ö†Ô∏è  Brak pliku bazy danych: $dbFile\n";
}

echo "\n‚úÖ Analiza zako≈Ñczona.\n";

