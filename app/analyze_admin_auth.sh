#!/bin/bash
# üîç Analiza mechanizmu autoryzacji w projekcie Tata Jest Wa≈ºny
# Autor: Roman Berens ‚Äî OneNetworks

APP_PATH="/var/www/tatajestwazny/app"
LOG_FILE="$APP_PATH/auth_analysis.log"

echo "üîç Analiza autoryzacji (Tata Jest Wa≈ºny)" | tee $LOG_FILE
echo "üìÖ Data: $(date)" | tee -a $LOG_FILE
echo "----------------------------------------" | tee -a $LOG_FILE

# 1Ô∏è‚É£ Szukanie plik√≥w odpowiedzialnych za logowanie
echo -e "\nüìÇ Pliki logowania (auth.php, login.php itp.):" | tee -a $LOG_FILE
find "$APP_PATH" -type f -iname "*auth*.php" -o -iname "*login*.php" | tee -a $LOG_FILE

# 2Ô∏è‚É£ Szukanie wystƒÖpie≈Ñ hase≈Ç i funkcji uwierzytelniania
echo -e "\nüß© Wykrywanie funkcji i zmiennych powiƒÖzanych z has≈Çem:" | tee -a $LOG_FILE
grep -Rin --color=never -E "password|PASSWORD|verify|hash|bcrypt|login|auth" "$APP_PATH" | tee -a $LOG_FILE

# 3Ô∏è‚É£ Weryfikacja, czy istnieje plik konfiguracyjny z has≈Çem
echo -e "\n‚öôÔ∏è Sprawdzanie pliku konfiguracyjnego config.php:" | tee -a $LOG_FILE
if [ -f "$APP_PATH/config/config.php" ]; then
  grep -E "password|pass" "$APP_PATH/config/config.php" | tee -a $LOG_FILE
else
  echo "‚ùå Brak pliku config.php" | tee -a $LOG_FILE
fi

# 4Ô∏è‚É£ Sprawdzenie bazy SQLite
DB_FILE="$APP_PATH/db/tjw.sqlite"
if [ -f "$DB_FILE" ]; then
  echo -e "\nüóÑÔ∏è Analiza bazy danych SQLite:" | tee -a $LOG_FILE
  docker exec tjw_php sqlite3 /var/www/html/app/db/tjw.sqlite ".tables" | tee -a $LOG_FILE
  docker exec tjw_php sqlite3 /var/www/html/app/db/tjw.sqlite "SELECT name FROM sqlite_master WHERE sql LIKE '%password%';" | tee -a $LOG_FILE
else
  echo -e "\n‚ö†Ô∏è Brak pliku bazy danych $DB_FILE" | tee -a $LOG_FILE
fi

# 5Ô∏è‚É£ Szukanie u≈ºycia funkcji password_verify() lub password_hash()
echo -e "\nüîç Szukanie funkcji password_verify / password_hash:" | tee -a $LOG_FILE
grep -Rin "password_verify" "$APP_PATH" | tee -a $LOG_FILE
grep -Rin "password_hash" "$APP_PATH" | tee -a $LOG_FILE

# 6Ô∏è‚É£ Analiza includes/auth.php
AUTH_FILE="$APP_PATH/includes/auth.php"
if [ -f "$AUTH_FILE" ]; then
  echo -e "\nüìú Fragment pliku auth.php (pierwsze 40 linii):" | tee -a $LOG_FILE
  head -n 40 "$AUTH_FILE" | tee -a $LOG_FILE
else
  echo -e "\n‚ö†Ô∏è Brak pliku includes/auth.php" | tee -a $LOG_FILE
fi

echo -e "\n‚úÖ Analiza zako≈Ñczona. Raport zapisano w: $LOG_FILE"
echo "Aby wy≈õwietliƒá: cat $LOG_FILE"
